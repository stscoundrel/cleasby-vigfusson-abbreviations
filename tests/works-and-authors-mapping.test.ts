import abbreviations from '../src';

describe('Works & authors abbr mapping tests', () => {
  test('Returns map of abbreviations to works / authors', () => {
    const resultMap = abbreviations.getWorksAndAuthorsMapping();

    expect(typeof resultMap).toBe('object');
    expect(resultMap instanceof Map).toBeTruthy();
  });

  test('Abbreviations in map have expected content', () => {
    const resultMap = abbreviations.getWorksAndAuthorsMapping();

    expect(resultMap.get('A. A.')).toBe('Antiquitates Americanae. (E. II.)');
    expect(resultMap.get('Ad.')).toBe('Arinbjarnar-drápa. (A. III.)');
    expect(resultMap.get('Akv.')).toBe('Atla-kviða. (A. II.)');
    expect(resultMap.get('Al.')).toBe('Alexanders Saga. (G. I.)');
    expect(resultMap.get('Alg.')).toBe('Algorismus. (H. III.)');
    expect(resultMap.get('Alm.')).toBe('Alvís-mál. (A. I.)');
    expect(resultMap.get('Am.')).toBe('Atla-mál. (A. II.)');
    expect(resultMap.get('Anal.')).toBe('Analecta. (D. II.)');
    expect(resultMap.get('Andr.')).toBe('Andreas Saga. (F. III.)');
    expect(resultMap.get('Anecd.')).toBe('Anecdoton. (H. II.)');
    expect(resultMap.get('Ann.')).toBe('Íslenzkir Annálar. (D. IV.)');
    expect(resultMap.get('Ant. S.')).toBe('Antonius Saga. (F. III.)');
    expect(resultMap.get('Arna-Magn. or A. M.')).toBe('Arna-Magnacanus.');
    expect(resultMap.get('Arons S.')).toBe('Arons Saga. (D. III.)');
    expect(resultMap.get('Art.')).toBe('Artus-kappa Sögur. (G. II.)');
    expect(resultMap.get('Aug.')).toBe('Augustinus Saga. (F. III.)');
    expect(resultMap.get('A. þ.')).toBe('Arfa-þáttr. (B. I.)');
    expect(resultMap.get('Ágr.')).toBe('Ágrip. (E. I.)');
    expect(resultMap.get('Ám.')).toBe('Auðunnar-máldagi. (J. I.)');
    expect(resultMap.get('Árna S.')).toBe('Árna Saga. (D. III.)');
    expect(resultMap.get('Band.')).toBe('Banda-manna Saga. (D. II.)');
    expect(resultMap.get('Barl.')).toBe('Barlaams Saga. (F. III.)');
    expect(resultMap.get('Baut.')).toBe('Bautil. (K. II.)');
    expect(resultMap.get('Bárð.')).toBe('Bárðar Saga. (D. V.)');
    expect(resultMap.get('Bb.')).toBe('Búnaðar-bálkr.');
    expect(resultMap.get('Bev.')).toBe('Bevus Saga. (G. II.)');
    expect(resultMap.get('Bjarn.')).toBe('Bjarnar Saga. (D. II.)');
    expect(resultMap.get('Bjarni')).toBe('Bjarni Thorarinson.');
    expect(resultMap.get('Björn')).toBe('Biörn Halldórsson.');
    expect(resultMap.get('B. K.')).toBe('Björgynjar Kálfskinn. (J. II.)');
    expect(resultMap.get('Bkv.')).toBe('Brynhildar-kviða. (A. II.)');
    expect(resultMap.get('Blas.')).toBe('Blasius Saga. (F. III.)');
    expect(resultMap.get('Bm.')).toBe('Bjarka-mál. (A. II.)');
    expect(resultMap.get('Boldt')).toBe('Boldt. (J. II.)');
    expect(resultMap.get('Boll.')).toBe('Bolla-þáttr. (D. V.)');
    expect(resultMap.get('Brandkr.')).toBe('Brandkrossa-þáttr. (D. V.)');
    expect(resultMap.get('Bret.')).toBe('Breta Sögur. (G. I.)');
    expect(resultMap.get('Brocm.')).toBe('Brocman. (K. II.)');
    expect(resultMap.get('Bs.')).toBe('Biskupa Sögur. (D. III.)');
    expect(resultMap.get('Bt.')).toBe('Bauga-tal. (B. I.)');
    expect(resultMap.get('Bær.')).toBe('Bærings Saga. (G. II.)');
    expect(resultMap.get('Clar.')).toBe('Clarus Saga. (G. II.)');
    expect(resultMap.get('Clem.')).toBe('Clements Saga. (F. III.)');
    expect(resultMap.get('Darr.')).toBe('Darraðar-ljóð. (A. III.)');
    expect(resultMap.get('D. I.')).toBe('Diplomatarium Islandicum. (J. I.)');
    expect(resultMap.get('Dipl.')).toBe('Diplomatarium. (J. I.)');
    expect(resultMap.get('D. N.')).toBe('Diplomatarium Norvagicum. (J. II.)');
    expect(resultMap.get('Dropl.')).toBe('Droplaugar-sona Saga. (D. II.)');
    expect(resultMap.get('Eb.')).toBe('Eyrbyggja Saga. (D. II.)');
    expect(resultMap.get('Edda')).toBe('Edda. (C. I.)');
    expect(resultMap.get('Eg.')).toBe('Egils Saga. (D. II.)');
    expect(resultMap.get('El.')).toBe('Elis Saga. (G. II.)');
    expect(resultMap.get('Eluc.')).toBe('Elucidarium. (F. II.)');
    expect(resultMap.get('Em.')).toBe('Eiríks-mál. (A. III.)');
    expect(resultMap.get('Esp.')).toBe('Espólin Árbækr Íslands.');
    expect(resultMap.get('Fagrsk.')).toBe('Fagrskinna. (K. I.)');
    expect(resultMap.get('Fas.')).toBe('Fornaldar Sögur. (C. II.)');
    expect(resultMap.get('Fb.')).toBe('Flateyjar-bók (E. I.)');
    expect(resultMap.get('Fbr.')).toBe('Fóstbræðra Saga. (D. II.)');
    expect(resultMap.get('Fél.')).toBe('Félags-rit.');
    expect(resultMap.get('Finnb.')).toBe('Finnboga Saga. (D. V.)');
    expect(resultMap.get('Fkv.')).toBe('Forn-kvæði.');
    expect(resultMap.get('Flóam. S.')).toBe('Flóamanna Saga. (E. I.)');
    expect(resultMap.get('Flóv.')).toBe('Flóvents Saga. (G. II.)');
    expect(resultMap.get('Fm.')).toBe('Fafnis-mál. (A. II.)');
    expect(resultMap.get('Fms.')).toBe('Fornmanna Sögur. (E. I.)');
    expect(resultMap.get('Fr.')).toBe('Fritzner’s Dictionary, 1867.');
    expect(resultMap.get('Frump.')).toBe('Frumpartar.');
    expect(resultMap.get('Fs.')).toBe('Forn-sögur. (D. II.)');
    expect(resultMap.get('Fsm.')).toBe('Fjölsvinns-mál. (A. II.)');
    expect(resultMap.get('Fspl.')).toBe('Forspjalls-ljóð. (A. I.)');
    expect(resultMap.get('F. þ.')).toBe('Festa-þáttr. (B. I.)');
    expect(resultMap.get('Fær.')).toBe('Færeyinga Saga. (E. II.)');
    expect(resultMap.get('Gautr.')).toBe('Gautreks Saga. (C. II.)');
    expect(resultMap.get('Gg.')).toBe('Grógaldr. (A. II.)');
    expect(resultMap.get('Gh.')).toBe('Guðrúnar-hefna. (A. II.)');
    expect(resultMap.get('Gísl.')).toBe('Gísla Saga. (D. II.)');
    expect(resultMap.get('Gkv.')).toBe('Guðrúnar-kviða. (A. II.)');
    expect(resultMap.get('Glúm.')).toBe('Víga-Glúms Saga. (D. II.)');
    expect(resultMap.get('Gm.')).toBe('Grímnis-mál. (A. I.)');
    expect(resultMap.get('Grág.')).toBe('Grágás. (B. I.)');
    expect(resultMap.get('Greg.')).toBe('Gregory. (F. II.)');
    expect(resultMap.get('Grett.')).toBe('Grettis Saga. (D. II.)');
    expect(resultMap.get('Grönd.')).toBe('Benedikt Gröndal.');
    expect(resultMap.get('Grönl. Hist. Mind.')).toBe('Grönlands Historiske Mindes-mærker.');
    expect(resultMap.get('Gs.')).toBe('Grótta-söngr. (A. II.)');
    expect(resultMap.get('Gsp.')).toBe('Getspeki Heiðreks. (A. II.)');
    expect(resultMap.get('Guðm. S.')).toBe('Guðmundar Saga. (D. III.)');
    expect(resultMap.get('Gullþ.')).toBe('Gull-Þóris Saga. (D. II.)');
    expect(resultMap.get('Gylfag.')).toBe('Gylfa-ginning. (C. I.)');
    expect(resultMap.get('Gþl.')).toBe('Gulaþings-lög. (B. II.)');
    expect(resultMap.get('Hallfr. S.')).toBe('Hallfreðar Saga. (D. II.)');
    expect(resultMap.get('Hallgr.')).toBe('Hallgrímr Pétrsson.');
    expect(resultMap.get('H. Ann.')).toBe('Hauks-annáll. (D. IV.)');
    expect(resultMap.get('Harð. S.')).toBe('Harðar Saga. (D. II.)');
    expect(resultMap.get('Har. S. Harð.')).toBe('Haralds Saga Harðráða. (E. I.)');
    expect(resultMap.get('Haustl.')).toBe('Haustlöng. (A. I.)');
    expect(resultMap.get('Hák. S.')).toBe('Hákonar Saga. (E. I.)');
    expect(resultMap.get('Hálfs S.')).toBe('Hálfs Saga. (C. II.)');
    expect(resultMap.get('Háv.')).toBe('Hávarðar Saga. (D. II.)');
    expect(resultMap.get('Hb.')).toBe('Hauks-bók. (H. IV.)');
    expect(resultMap.get('Hbl.')).toBe('Harbarðs-ljóð. (A. I.)');
    expect(resultMap.get('Hd.')).toBe('Hús-drápa. (A. I.)');
    expect(resultMap.get('Hdl.')).toBe('Hyndlu-ljóð. (A. II.)');
    expect(resultMap.get('Hðm.')).toBe('Hamðis-mál. (A. II.)');
    expect(resultMap.get('H. E.')).toBe('Historia Ecclesiastica Islandiae. (J. I.)');
    expect(resultMap.get('Heiðarv. S. or Heið. S.')).toBe('Heiðarvíga Saga. (D. II.)');
    expect(resultMap.get('Helr.')).toBe('Helreið Brynhildar. (A. II.)');
    expect(resultMap.get('Hem.')).toBe('Hemings-þáttr. (C. H.)');
    expect(resultMap.get('Hervar. S.')).toBe('Hervarar Saga. (C. II.)');
    expect(resultMap.get('Hjalt.')).toBe('Hjaltalín, Icelandic Botany.');
    expect(resultMap.get('Hkm.')).toBe('Hákonar-mál. (A. III.)');
    expect(resultMap.get('Hkr.')).toBe('Heimskringla. (E. I.)');
    expect(resultMap.get('Hkv.')).toBe('Helga-kviða Hundingsbana. (A. II.)');
    expect(resultMap.get('Hkv. Hjörv.')).toBe('Helga-kviða Hjörvarðssonar. (A. II.)');
    expect(resultMap.get('Hlt.')).toBe('Háleygja-tal. (A. II.)');
    expect(resultMap.get('Hm.')).toBe('Hává-mál. (A. I.)');
    expect(resultMap.get('Hom.')).toBe('Homiliu-bók. (F. II.)');
    expect(resultMap.get('Hrafn.')).toBe('Hrafnkels Saga. (D. II.)');
    expect(resultMap.get('Hrólfs Kr. S.')).toBe('Hrólfs Saga Kraka.(C. II.)');
    expect(resultMap.get('Hs.')).toBe('Harm-sol. (A. III.)');
    expect(resultMap.get('Hsm.')).toBe('Hugsvinns-mál. (A. III.)');
    expect(resultMap.get('Ht.')).toBe('Hátta-tal. (C. I.)');
    expect(resultMap.get('Hung. or Hv.')).toBe('Hungr-vaka. (D. III)');
    expect(resultMap.get('Húst.')).toBe('Hús-tafla.');
    expect(resultMap.get('Hým.')).toBe('Hýmis-kviða. (A. I.)');
    expect(resultMap.get('Hænsaþ.')).toBe('Hænsa-Þóris Saga. (D. II.)');
    expect(resultMap.get('Höfuðl.')).toBe('Höfuðlausn. (A. III.)');
    expect(resultMap.get('Itin.')).toBe('Itinerarium or Travels of Eggert Ólafsson, 1772.');
    expect(resultMap.get('Ivar Aasen')).toBe('Ivar Aasen’s Dictionary, 1850.');
    expect(resultMap.get('Íb.')).toBe('Íslendinga-bók. (D. I.)');
    expect(resultMap.get('Íd.')).toBe('Íslendinga-drápa. (A. III.)');
    expect(resultMap.get('Ingv.')).toBe('Ingvars Saga. (E. I.)');
    expect(resultMap.get('Ísl. Þjóðs.')).toBe('Íslenzkar Þjóðsögur.');
    expect(resultMap.get('Játv.')).toBe('Játvarðar Saga. (E. II.)');
    expect(resultMap.get('Jb.')).toBe('Jóns-bók. (B. III.)');
    expect(resultMap.get('Jd.')).toBe('Jómsvíkinga-drápa. (A. III.)');
    expect(resultMap.get('Jm.')).toBe('Jóns-máldagi. (J. I.)');
    expect(resultMap.get('Jóh.')).toBe('Jóhannes Saga. (F. III.)');
    expect(resultMap.get('Jómsv. S. or Jv.')).toBe('Jómsvíkinga Saga. (E. I.)');
    expect(resultMap.get('Jónas')).toBe('Jónas Hallgrímsson.');
    expect(resultMap.get('Jóns S.')).toBe('Jóns Saga. (D. III.)');
    expect(resultMap.get('Jón Þorl.')).toBe('Jón Þorláksson.');
    expect(resultMap.get('Js.')).toBe('Járnsíða. (B. III.)');
    expect(resultMap.get('Karl.')).toBe('Karla-magnús Saga. (G. I.)');
    expect(resultMap.get('K. Á.')).toBe('Kristinn-réttr Árna biskups. (B. III.)');
    expect(resultMap.get('Kb.')).toBe('Konungs-bók. (B. I, C. I, etc.)');
    expect(resultMap.get('Kjaln. S.')).toBe('Kjalnesinga Saga. (D. V.)');
    expect(resultMap.get('Km.')).toBe('Kráku-mál. (A. III.)');
    expect(resultMap.get('Knytl.')).toBe('Knytlinga Saga. (E. I.)');
    expect(resultMap.get('Konr.')).toBe('Konráðs Saga. (G. III.)');
    expect(resultMap.get('Korm.')).toBe('Kormaks Saga. (D. II.)');
    expect(resultMap.get('Kristni S. or Kr. S.')).toBe('Kristni Saga. (D. I. III.)');
    expect(resultMap.get('Krók.')).toBe('Króka Refs Saga. (D. V.)');
    expect(resultMap.get('K. Þ. K.')).toBe('Kristinn-réttr Þorláks ok Ketils = Kristinna-laga-þáttr. (B. I.)');
    expect(resultMap.get('Landn.')).toBe('Landnáma. (D. I.)');
    expect(resultMap.get('Laur. S.')).toBe('Laurentius Saga. (D. III.)');
    expect(resultMap.get('Ld.')).toBe('Laxdæla Saga. (D. II.)');
    expect(resultMap.get('Lex. Mythol.')).toBe('Lexicon Mythologicum.');
    expect(resultMap.get('Lex. Poët.')).toBe('Lexicon Poëticum by Sveinbjörn Egilsson, 1860.');
    expect(resultMap.get('Lex. Run.')).toBe('Lexicon Runicum.');
    expect(resultMap.get('Lil.')).toBe('Lilja. (A. III.)');
    expect(resultMap.get('Ls.')).toBe('Loka-senna. (A. I.)');
    expect(resultMap.get('Lv.')).toBe('Ljósvetninga Saga. (D. II.)');
    expect(resultMap.get('Lækn.')).toBe('Lækninga-bók. (H. V.)');
    expect(resultMap.get('Mag.')).toBe('Magus Saga. (G. II.)');
    expect(resultMap.get('Magn.')).toBe('Magnús Saga jarls. (E. II.)');
    expect(resultMap.get('Magn. S. Góða')).toBe('Magnús Saga Góða. (E. I.)');
    expect(resultMap.get('Mar.')).toBe('Maríu Saga. (F. III.)');
    expect(resultMap.get('Mart.')).toBe('Martinus Saga. (F. III.)');
    expect(resultMap.get('Merl.')).toBe('Merlinus Spa. (A. III.)');
    expect(resultMap.get('Mirm.')).toBe('Mirmants Saga. (G. II.)');
    expect(resultMap.get('M. K.')).toBe('Munkalíf. (J. II.)');
    expect(resultMap.get('Mkv.')).toBe('Málshátta-kvæði. (A. III.)');
    expect(resultMap.get('Mork.')).toBe('Morkinskinna. (E. I.)');
    expect(resultMap.get('Mött.')).toBe('Möttuls Saga. (G. I.)');
    expect(resultMap.get('N. G. L.')).toBe('Norges Gamle Love. (B. II.)');
    expect(resultMap.get('Niðrst.')).toBe('Niðrstigningar Saga. (F. III.)');
    expect(resultMap.get('Nj.')).toBe('Njála. (D. II.)');
    expect(resultMap.get('Njarð.')).toBe('Njarðvíkinga Saga. (D. II.)');
    expect(resultMap.get('Njóla')).toBe('Njóla, the poem.');
    expect(resultMap.get('Norge’s Beskriv.')).toBe('Beskrivelse Norge.');
    expect(resultMap.get('Norna G. S.')).toBe('Norna-Gests Saga. (C. II.)');
    expect(resultMap.get('N. T.')).toBe('New Testament.');
    expect(resultMap.get('Ný Fél.')).toBe('Ný Félags-rit.');
    expect(resultMap.get('Ob.')).toBe('Orms-bók. (C. I.)');
    expect(resultMap.get('Od.')).toBe('Odysseifs-kvæði, prose, 1829.');
    expect(resultMap.get('Odd. or S. Odd.')).toBe('Stjörnu-Odda draumr. (D. V.)');
    expect(resultMap.get('Og.')).toBe('Oddrúnar-grátr. (A. II.)');
    expect(resultMap.get('O. H. L.')).toBe('Ólafs Saga Helga Legendaria. (E. I.)');
    expect(resultMap.get('Ór.')).toBe('Ólafs-ríma. (A. III)');
    expect(resultMap.get('Orkn.')).toBe('Orkneyinga Saga. (E. II.)');
    expect(resultMap.get('Ób.')).toBe('Ómaga-bálkr. (B. I.)');
    expect(resultMap.get('Ó. H.')).toBe('Ólafs Saga Helga. (E. I.)');
    expect(resultMap.get('Ósv.')).toBe('Ósvalds Saga. (K. II.)');
    expect(resultMap.get('Ó. T.')).toBe('Ólafs Saga Tryggvasonar. (E. I.)');
    expect(resultMap.get('Pass.')).toBe('Passiu-Sálmar.');
    expect(resultMap.get('Páls S.')).toBe('Páls Saga. (D. III.)');
    expect(resultMap.get('Pd.')).toBe('Placidus-drápa. (A. III.)');
    expect(resultMap.get('Pm.')).toBe('Pétrs-máldagi. (J. I.)');
    expect(resultMap.get('Post.')).toBe('Postula Sögur. (F. III.)');
    expect(resultMap.get('Rafns. S.')).toBe('Rafns Saga. (D. III.)');
    expect(resultMap.get('Ragn. S.')).toBe('Ragnars Saga. (C. II.)');
    expect(resultMap.get('Rb.')).toBe('Rímbegla. (H. III.)');
    expect(resultMap.get('Rd.')).toBe('Reykdæla Saga. (D. II.)');
    expect(resultMap.get('Rétt.')).toBe('Réttarbætr. (B. II.)');
    expect(resultMap.get('Rm.')).toBe('Rígsmál. (A. II.)');
    expect(resultMap.get('Róm.')).toBe('Rómverja Saga. (E. II.)');
    expect(resultMap.get('Safn')).toBe('Safn til Sögu Islands.');
    expect(resultMap.get('Sb.')).toBe('Staðarhóls-bók. (B. I.)');
    expect(resultMap.get('Sd.')).toBe('Svarfdæla Saga. (D. II.)');
    expect(resultMap.get('Sdm.')).toBe('Sigrdrífu-mál. (A. II.)');
    expect(resultMap.get('Sig. Breiðf.')).toBe('Sigurðr Breiðfjörð.');
    expect(resultMap.get('Sig. Pét.')).toBe('Sigurðr Pétrsson.');
    expect(resultMap.get('Skálda')).toBe('Skálda. (H. I.)');
    expect(resultMap.get('Skáld H.')).toBe('Skáld Helga-rímur. (A. III.)');
    expect(resultMap.get('Skjöld.')).toBe('Skjöldunga Saga. (C. II.)');
    expect(resultMap.get('Skm.')).toBe('Skírnis-mál. (A. I.)');
    expect(resultMap.get('Sks.')).toBe('Konungs Skugg-sjá. (H. II.)');
    expect(resultMap.get('Sksm.')).toBe('Skáldskapar-mál. (C. I.)');
    expect(resultMap.get('Skv.')).toBe('Sigurðar-kviða. (A. II.)');
    expect(resultMap.get('Sl. or Sól.')).toBe('Sólarljóð. (A. III.)');
    expect(resultMap.get('Snót')).toBe('Snót, poems.');
    expect(resultMap.get('Stef. Ól.')).toBe('Stefán Ólafsson.');
    expect(resultMap.get('Stell.')).toBe('Stellu-rímur.');
    expect(resultMap.get('Stj.')).toBe('Stjórn. (F. I.)');
    expect(resultMap.get('Stor.')).toBe('Sona-torrek. (A. III.)');
    expect(resultMap.get('Str.')).toBe('Strengleikar. (G. II.)');
    expect(resultMap.get('Sturl.')).toBe('Sturlunga Saga. (D. I.)');
    expect(resultMap.get('Sverr. S.')).toBe('Sverris Saga. (E. I.)');
    expect(resultMap.get('Symb.')).toBe('Symbolae. (H. IV.)');
    expect(resultMap.get('Sæm.')).toBe('Sæmundar Edda. (A, C. I.)');
    expect(resultMap.get('Th.')).toBe('Theophilus. (F. III.)');
    expect(resultMap.get('Thorn.')).toBe('Thomas Saga. (E. II.)');
    expect(resultMap.get('Tl.')).toBe('Tíundar-lög. (B. I.)');
    expect(resultMap.get('Tristr.')).toBe('Tristrams Saga. (G. II.)');
    expect(resultMap.get('Ub.')).toBe('Uppsala-bók. (C. I.)');
    expect(resultMap.get('Úlf.')).toBe('Úlfars-rímur.');
    expect(resultMap.get('Valla L.')).toBe('Valla Ljóts Saga. (D. II.)');
    expect(resultMap.get('Vápn.')).toBe('Vápnfirðinga Saga. (D. II.)');
    expect(resultMap.get('Vd.')).toBe('Vatnsdæla Saga. (D. II.)');
    expect(resultMap.get('Ver.')).toBe('Veraldar Saga. (E. II.)');
    expect(resultMap.get('Verel.')).toBe('Verelius, Index.');
    expect(resultMap.get('Vh.')).toBe('Vatnshyrna MS.');
    expect(resultMap.get('Vídal.')).toBe('Vídalíns-Postilla.');
    expect(resultMap.get('Vídal. Skýr.')).toBe('Vídalín Skýringar.');
    expect(resultMap.get('Vígl.')).toBe('Víglundar Saga. (D. V.)');
    expect(resultMap.get('Vínl. þ.')).toBe('Vínlands-þáttr. (E. II.)');
    expect(resultMap.get('Vkv.')).toBe('Völundar-kviða. (A. II.)');
    expect(resultMap.get('Vm.')).toBe('Vilkins-máldagi. (J. I.)');
    expect(resultMap.get('Vsl.')).toBe('Vígslóði. (B. I.)');
    expect(resultMap.get('Vsp.')).toBe('Völuspá. (A. I.)');
    expect(resultMap.get('Vtkv.')).toBe('Vegtams-kviða. (A. I.)');
    expect(resultMap.get('Vþm.')).toBe('Vafþrúðnis-mál. (A. I.)');
    expect(resultMap.get('Völs. S.')).toBe('Völsunga Saga. (C. II.)');
    expect(resultMap.get('Yngl. S.')).toBe('Ynglinga Saga. (C. II.)');
    expect(resultMap.get('Yt.')).toBe('Ynglinga-tal. (A. II.)');
    expect(resultMap.get('Þd.')).toBe('Þórs-drápa. (A. I.)');
    expect(resultMap.get('Þiðr.')).toBe('Þiðreks Saga. (G. I.)');
    expect(resultMap.get('Þjal.')).toBe('Þjalar-Jóns Saga. (G. III.)');
    expect(resultMap.get('Þkv.')).toBe('Þryms-kviða. (A. I.)');
    expect(resultMap.get('Þorf. Karl.')).toBe('Þorfinns Saga Karlsefnis. (D. II.)');
    expect(resultMap.get('Þorl. S.')).toBe('Þorláks Saga. (D. III.)');
    expect(resultMap.get('Þorst. hv.')).toBe('Þorsteins-þáttr hvíta. (D. II.)');
    expect(resultMap.get('Þorst. Síðu H.')).toBe('Þorsteins Saga Síðu-Hallssonar. (D. II.)');
    expect(resultMap.get('Þorst. S. St.')).toBe('Þorsteins-þáttr Stangarhöggs. (D. II.)');
    expect(resultMap.get('Þorst. ux.')).toBe('Þorsteins-þattr uxafóts. (D. V.)');
    expect(resultMap.get('Þórð.')).toBe('Þórðar Saga hreðu. (D. V.)');
    expect(resultMap.get('Þ. þ.')).toBe('Þingskapa-þáttr. (B. I.)');
    expect(resultMap.get('Ölk.')).toBe('Ölkofra-þáttr. (D. II.)');
  });
});
